pipeline {
    agent any

    environment {
        CLIENT_DOCKER_IMAGE = 'oumaymaii/soutenance-app-client-jenkins'
        SERVER_DOCKER_IMAGE = 'oumaymaii/soutenance-app-server-jenkins'
        DOCKER_TAG = 'latest' // Consider using a versioned tag
        DOCKER_REGISTRY_URL = 'your-docker-registry-url' // Specify your Docker registry URL
    }

    stages {
        stage('Build and Push Docker Images') {
            steps {
                script {
                    // Build and push the client-side Docker image
                    sh "docker build -t ${CLIENT_DOCKER_IMAGE}:${DOCKER_TAG} -f  ./client/dockerfile ./client"
                    withDockerRegistry([credentialsId: 'eemy718', url: '']) {
                        sh "docker push ${CLIENT_DOCKER_IMAGE}:${DOCKER_TAG}"
                    }

                    // Build and push the server-side Docker image
                    sh "docker build -t ${SERVER_DOCKER_IMAGE}:${DOCKER_TAG} -f ./server/dockerfile ./server"
                    withDockerRegistry([credentialsId: 'eemy718', url: '']) {
                        sh "docker push ${SERVER_DOCKER_IMAGE}:${DOCKER_TAG}"
                    }
                }
            }
        }

        stage('Deploy to Minikube') {
            steps {
                script {
                    // Set the kubectl context to Minikube
                    sh 'kubectl config use-context minikube'

                    // Apply Kubernetes deployment and service YAML files
                    sh 'kubectl apply -f kubernetes/deployment.yaml'
                    sh 'kubectl apply -f kubernetes/service.yaml'
                }
            }
        }
    }
}
