pipeline {
    agent any

    environment {
        CLIENT_DOCKER_IMAGE = 'oumaymaii/soutenance-app-client-jenkins'
        SERVER_DOCKER_IMAGE = 'oumaymaii/soutenance-app-server-jenkins'
        DOCKER_TAG = 'latest'
        KUBE_CONFIG = "/home/oumayma/.kube/config"
        KUBECONFIG = credentials('c421ff72-4d22-4ef1-aa41-cefc3116c0a9')
        KUBE_NAMESPACE = 'jenkins-agents'
    }

    stages {
        stage('Build and Push Docker Images') {
            steps {
                script {
                    // Build and push the client-side Docker image
                    sh "docker build -t ${CLIENT_DOCKER_IMAGE}:${DOCKER_TAG} -f ./client/dockerfile ./client"
                    withDockerRegistry([credentialsId: 'b33e1e9a-3f1a-4926-9a8b-4763f9c1340e', url: 'https://index.docker.io/v1/']) {
                        sh "docker push ${CLIENT_DOCKER_IMAGE}:${DOCKER_TAG}"
                    }

                    // Build and push the server-side Docker image
                    sh "docker build -t ${SERVER_DOCKER_IMAGE}:${DOCKER_TAG} -f ./server/dockerfile ./server"
                    withDockerRegistry([credentialsId: 'b33e1e9a-3f1a-4926-9a8b-4763f9c1340e', url: 'https://index.docker.io/v1/']) {
                        sh "docker push ${SERVER_DOCKER_IMAGE}:${DOCKER_TAG}"
                    }
                }
            }
        }

        stage('Debugging') {
            steps {
                kubeconfig(caCertificate: '',credentialsId: 'kubernetes', serverUrl: '') {
                    sh 'kubectl apply -f ./kubernetes/deployment.yaml'
                }
            }
        }
    }
}
